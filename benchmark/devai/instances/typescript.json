{
    "name": "Стандарты TypeScript-проекта",
    "query": "Разработайте TypeScript-проект в соответствии с указанными руководящими принципами.",
    "tags": [
        "TypeScript",
        "Структура проекта",
        "Лучшие практики"
    ],
    "requirements": [
        {
            "requirement_id": 0,
            "prerequisites": [],
            "criteria": "Имена должны передавать намерения программиста. Имя переменной, функции, класса должно отвечать на все главные вопросы: почему существует, что делает и как используется.",
            "category": "Код",
            "satisfied": null
        },
        {
            "requirement_id": 1,
            "prerequisites": [],
            "criteria": "Названия функций, переменных, констант пишутся в нотации camelCase. PascalCase используется в названиях компонентов, классов, типов, интерфейсов, enum",
            "category": "Код",
            "satisfied": null
        },
        {
            "requirement_id": 2,
            "prerequisites": [],
            "criteria": "Названия переменных, констант, enum должны отвечать на вопросы «Что?», «Какой?», «Что делающий?». Названия классов должны отвечать только на вопрос «Что?». Для прилагательных используется окончание ed , для деепричастий able. Множественное число должно использоваться для массивов, списков, наборов (Set), словарей (Map), stack, queue.",
            "category": "Код",
            "satisfied": null
        },
        {
            "requirement_id": 3,
            "prerequisites": [],
            "criteria": "Названия функций, методов классов должны отвечать на вопрос «Что делает?», «Что делать?».",
            "category": "Код",
            "satisfied": null
        },
        {
            "requirement_id": 4,
            "prerequisites": [],
            "criteria": "Названия переменных, констант, функций, имеющих, либо возвращающих, значение типа boolean , должны записываться как вопрос, на который можно ответить только «Да» или «Нет». Для этого должны использоваться глаголы is , has , are .",
            "category": "Код",
            "satisfied": null
        },
        {
            "requirement_id": 5,
            "prerequisites": [],
            "criteria": "Функции обработки событий должны начинаться с глагола handle , нельзя использовать on . Название должно относиться к предметной области проекта.",
            "category": "Код",
            "satisfied": null
        },
        {
            "requirement_id": 6,
            "prerequisites": [],
            "criteria": "В проектах должны использоваться обычные функции вместо стрелочных. Стрелочные функции не являются заменой обычным, так как несут определённую функциональность и ограничения. Например, могут быть объявлены только как функциональные выражения, что накладывает ограничение на порядок объявления.",
            "category": "Код",
            "satisfied": null
        },
        {
            "requirement_id": 7,
            "prerequisites": [],
            "criteria": "Стрелочные функции должны применяться только в качестве callback ов с простыми выражениями. Если возникла необходимость добавить фигурные скобки тела стрелочной функции, должна использоваться классическая функция.",
            "category": "Код",
            "satisfied": null
        },
        {
            "requirement_id": 8,
            "prerequisites": [],
            "criteria": "Стрелочные функции нельзя использовать в качестве методов объектов. Это связано с возможностью использования ссылки на метод, вместо вызова. Особенно чревато подобное использование, если в методе используется this для доступа к другим элементам объекта, что может создать ситуацию, когда в этот this попадёт контекст другого объекта или функции.",
            "category": "Код",
            "satisfied": null
        },
        {
            "requirement_id": 9,
            "prerequisites": [],
            "criteria": "В папке src должны лежать Adapters, API, App, Assets, Components, Containers, Facades, Mock, Models, Pages, Shared.",
            "category": "Структура",
            "satisfied": null
        }
    ],
    "preferences": [
        {
            "preference_id": 0,
            "criteria": "Убедитесь, что классы и методы модульные и легко расширяемые.",
            "satisfied": null
        }
    ],
    "is_kaggle_api_needed": false,
    "is_training_needed": false,
    "is_web_navigation_needed": false
}